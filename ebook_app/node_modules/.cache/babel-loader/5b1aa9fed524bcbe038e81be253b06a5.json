{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\react-demo-apps\\\\ebook_app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_ITEM_TO_CART') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount; // same for financial asset data\n\n    const updatedItems = state.items.concat(action.item); // adds current state with incoming object\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CardProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = _item => {\n    dispatchCartAction({\n      type: 'ADD_ITEM_TO_CART',\n      item: _item\n    });\n  };\n\n  const removeItemFromCartHandler = _id => {\n    dispatchCartAction({\n      type: 'REMOVE_ITEM_FROM_CART',\n      id: _id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CardProvider;\nexport default CardProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react/react-demo-apps/ebook_app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","concat","CardProvider","props","cartState","dispatchCartAction","addItemToCartHandler","_item","removeItemFromCartHandler","_id","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AACtC,UAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD,CADsC,CAEwB;;AAE9D,UAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB,CAJsC,CAIgB;;AACtD,WAAO;AACLP,MAAAA,KAAK,EAAEU,YADF;AAELT,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,SAAOP,gBAAP;AACD,CAZD;;AAcA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMiB,oBAAoB,GAAIC,KAAD,IAAW;AACtCF,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,kBAAR;AAA4BE,MAAAA,IAAI,EAAEU;AAAlC,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,yBAAyB,GAAIC,GAAD,IAAS;AACzCJ,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,uBAAR;AAAiCe,MAAAA,EAAE,EAAED;AAArC,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBqB,IAAAA,OAAO,EAAEN,oBAHS;AAIlBO,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,WAA7B;AAAA,cACGR,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMZ,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD_ITEM_TO_CART') {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount; // same for financial asset data\r\n\r\n    const updatedItems = state.items.concat(action.item); // adds current state with incoming object\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CardProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (_item) => {\r\n    dispatchCartAction({ type: 'ADD_ITEM_TO_CART', item: _item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (_id) => {\r\n    dispatchCartAction({ type: 'REMOVE_ITEM_FROM_CART', id: _id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardProvider;\r\n"]},"metadata":{},"sourceType":"module"}